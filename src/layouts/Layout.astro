---
import { ViewTransitions } from "astro:transitions";
import { graphql } from "gql.tada";
import { client } from "../utils/graphql-client";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

export interface Props {
	title: string;
	metaDescription?: string;
	isHome?: boolean;
	contentClass?: string;
}

const { title, metaDescription, isHome, contentClass } = Astro.props;
const { slug } = Astro.params;

const query = graphql(`
	query ($slug: String!) {
		collection: pageCollection(where: { slug: $slug }) {
			items {
				config
				lead
			}
		}
	}
`);

const data = await client.request(query, {
	slug: (slug as string) || "/",
});

const currentPage = data.collection?.items[0];
const pageMetaDescription = metaDescription || currentPage.lead;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		{
			/**
			 * Favicon setup
			 * https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs
			 */
		}
		<link rel="icon" href="/favicon.ico" sizes="32x32" />
		<link rel="icon" href="/icon.svg" type="image/svg+xml" />
		<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
		<link rel="manifest" href="/manifest.webmanifest" />
		<title>{title} - Front Conference Zurich</title>
		<meta name="description" content={pageMetaDescription} />
		<ViewTransitions />
		<style lang="scss" is:global>
			@import "../styles/fonts.scss";
			@import "../styles/properties.scss";
			@import "../styles/global.scss";
			@import "../styles/typography.scss";
			@import "../styles/visibility.scss";
			@import "../styles/grid.scss";
		</style>

		{/* Load Custom Page Script / Styles */}
		{
			currentPage.config?.scripts &&
				currentPage.config.scripts.map((script) => (
					<script is:inline src={script} async />
				))
		}

		{
			currentPage.config?.styles &&
				currentPage.config.styles.map((style) => (
					<link rel="stylesheet" href={style} />
				))
		}
	</head>
	<body>
		<Header />
		<slot name="after-header" />
		<main class:list={[isHome && "home"]}>
			{
				isHome ? (
					<slot />
				) : (
					<div class:list={["container", "grid", "section", contentClass]}>
						<slot />
					</div>
				)
			}
		</main>
		<Footer />
	</body>
</html>
