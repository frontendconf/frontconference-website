---
import { graphql } from "gql.tada";
import { client } from "../utils/graphql-client";
import { WORKSHOP_YEAR_TAG_KEY } from "../utils/constants";
import { speakerDetailFragment } from "./SpeakerDetail.astro";
import ArticleTeaser from "./ArticleTeaser.astro";
import { notEmpty } from "../utils/helpers";

const formatDate = (date: string) => {
	return new Date(date).toLocaleDateString("en-US", {
		month: "short",
		day: "numeric",
		year: "numeric",
	});
};

export interface Props {
	slug: string;
	class?: string;
}

const { slug, class: className, ...rest } = Astro.props;

const query = graphql(
	`
		query GetWorkshops($limit: Int!, $yearTag: String!) {
			workshops: workshopCollection(
				limit: $limit
				where: { tags: { title: $yearTag } }
			) {
				items {
					title
					lead
					slug
					from
					teacher {
						...SpeakerDetailFragment
					}
				}
			}
		}
	`,
	[speakerDetailFragment],
);

const data = await client.request(query, {
	yearTag: WORKSHOP_YEAR_TAG_KEY,
	limit: 10,
});

const workshops = data.workshops?.items.filter(notEmpty) || [];
---

<div class:list={["wrapper", className]} {...rest}>
	<ul class="workshop-list">
		{
			workshops.map((workshop) => (
				<li class="workshop-list__item">
					<ArticleTeaser
						title={workshop.title}
						text={workshop.lead}
						link={workshop.slug}
						meta={[formatDate(workshop.from), workshop.teacher.name]}
						titleTag="h2"
					/>
				</li>
			))
		}
	</ul>
</div>

<style lang="scss">
	@import "../styles/_imports.scss";

	.workshop-list {
		display: flex;
		flex-direction: column;
		gap: var(--spacing-10x);
		list-style: none;
		margin: 0;
		padding: 0;

		@include breakpoint-up("md") {
			gap: var(--spacing-20x);
		}
	}
</style>
