---
import ButtonLink from "./ButtonLink.astro";
import { graphql } from "gql.tada";
import { client } from "../utils/graphql-client";
import Logo from "./Logo.astro";
import MenuBurger from "./MenuBurger.astro";

// TODO: find solution to identify current page other than slug (for special pages like speakers etc)
const { slug } = Astro.params;

const query = graphql(`
  query menu {
    configCollection {
      items {
        menuCollection {
          items {
            ... on Page {
              title
              menu
              slug
              sys {
                id
              }
              __typename
            }
          }
        }
      }
    }
  }
`);

const data = await client.request(query);

const menuItems =
  data?.configCollection?.items?.[0]?.menuCollection?.items || [];
---

<header class="header">
  <div class="inner">
    <div class="left">
      <a href="/" class="home-link">
        <Logo class={"logo"} />
        <span class="home-link-text-mobile">
          FRONT<br />CONF 24
        </span>
      </a>
    </div>
    <div class="right">
      <nav id="navigation" class="nav">
        <ul class="nav-list">
          {
            menuItems.map(
              (item) =>
                item &&
                item.__typename === "Page" && (
                  <li class="nav-list-item">
                    <a
                      href={`/${item.slug}`}
                      class:list={["link", { active: item.slug === slug }]}
                    >
                      {item.menu || item.title}
                    </a>
                  </li>
                )
            )
          }
        </ul>
      </nav>
      <ButtonLink href={`/tickets`} variant="tertiary"
        >Get your ticket</ButtonLink
      >
      <MenuBurger />
    </div>
  </div>
</header>

<script>
  function attachListeners() {
    const menuBurger = document.getElementById("menu-burger")!;
    const navigation = document.getElementById("navigation")!;

    function openMenu() {
      menuBurger.classList.add("open");
      menuBurger.setAttribute("aria-expanded", "true");
      navigation.classList.add("is-open");
    }

    function closeMenu() {
      menuBurger.classList.remove("open");
      menuBurger.setAttribute("aria-expanded", "false");
      navigation.classList.remove("is-open");
    }
    menuBurger.addEventListener("click", function () {
      const currentlyOpen = this.getAttribute("aria-expanded") === "true";
      if (currentlyOpen) {
        closeMenu();
      } else {
        openMenu();
      }
    });
  }

  document.addEventListener("astro:after-swap", () => {
    console.log("after swap");
    attachListeners();
  });

  document.addEventListener(
    "astro:page-load",
    () => {
      console.log("page load");
      attachListeners();
    },
    { once: true }
  );
</script>

<style lang="scss">
  @import "../styles/_imports.scss";

  .header {
    position: sticky;
    background: var(--color-black);
    top: 0;
    z-index: 10;
  }

  .inner {
    display: flex;
    max-width: 1400px; // TODO: use rem & variable
    padding: var(--spacing-sm) var(--grid-padding);
    margin: 0 auto;
    justify-content: space-between;
    align-items: center;
  }

  .home-link {
    display: flex;
    gap: var(--spacing-xs);
    text-decoration: none !important;
  }

  .logo {
    display: block;
    height: pxToRem(40);
    width: pxToRem(40);
  }

  // TODO: Implement & use font mixins
  .home-link-text-mobile {
    position: relative;
    color: var(--color-gray-050);
    font-size: 14px;
    font-style: normal;
    font-weight: 500;
    line-height: 1.14; /* 114.286% */
    letter-spacing: 0.42px;
    text-transform: uppercase;
    top: pxToRem(-2);
  }

  .right {
    display: flex;
    gap: pxToRem(16);
    align-items: center;

    @include breakpoint-up("rg") {
      gap: var(--spacing-lg);
    }
  }

  .nav {
    @include breakpoint-down("md") {
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      z-index: 1;
      background-color: var(--color-black);
      padding: 20px 0 20px;
      transform: translateY(60px);
      transition: all var(--transition-time-medium) ease;
      opacity: 0;
      // TODO: Test on different deviced, might be shitty
      height: calc(100vh - 80px);
      pointer-events: none;

      &.is-open {
        transform: translateY(80px);
        opacity: 1;
        pointer-events: all;
      }
    }
  }

  .nav-list {
    padding: 0;
    margin: 0;

    @include breakpoint-up("lg") {
      display: flex;
      align-items: flex-start;
      gap: var(--spacing-sm);
      list-style: none;
    }

    @include breakpoint-up("xl") {
      gap: var(--spacing-lg);
    }
  }

  .nav-list-item {
    display: block;
    border-top: 1px solid var(--color-gray-600);
    &:last-child {
      border-bottom: 1px solid var(--color-gray-600);
    }

    @include breakpoint-up("lg") {
      border-top: none;
      &:last-child {
        border-bottom: none;
      }
    }
  }

  // TODO: Implement & use font mixins
  .link {
    display: block;
    color: var(--color-white);
    padding: pxToRem(16) var(--grid-padding);
    font-size: 16px;
    line-height: 1;
    text-decoration: none;

    &.active {
      color: var(--color-green-100);
    }

    @include breakpoint-up("lg") {
      padding: 0;
      font-size: 14px;
      font-style: normal;
      font-weight: 400;
      line-height: 1.14;
      letter-spacing: 0.14px;
    }
  }
</style>
