---
import { Icon } from "astro-icon/components";
import BackButton from "../components/BackButton.astro";

export interface Props {
	title: string;
	displayBacklink?: boolean;
	backLinkTitle?: string;
}

const { title, displayBacklink = false, backLinkTitle } = Astro.props;
const { slug } = Astro.params;

const heroGlyphChar = slug || title;
const glyphColor = ["green-100", "cardboard", "red", "orange"][
	Math.floor(Math.random() * 4)
];
---

<section class="hero container">
	<BackButton title={backLinkTitle} displayBacklink={displayBacklink} />
	<h1 class="hero__title">{title}</h1>
	<div class="hero__icon-wrapper">
		<Icon
			class:list={["hero__icon", glyphColor && `color--${glyphColor}`]}
			name={`glyph${heroGlyphChar.charAt(0).toUpperCase()}`}
		/>
	</div>
</section>

<style lang="scss">
	@import "../styles/_imports.scss";

	.hero {
		position: relative;
		display: flex;
		align-items: start;
		flex-direction: column;
		max-width: var(--max-content-width);
		height: pxToRem(420);
		background: var(--color-black);
		padding-block-end: var(--spacing-16x);

		@include breakpoint-up("lg") {
			padding-block-end: var(--spacing-20x);
		}

		&__backlink-wrapper {
			// TODO
		}

		&__title {
			@extend %typo-h1;
			color: var(--color-white);
			margin-block: auto 0;

			@include breakpoint-up("lg") {
				max-width: 70%;
			}

			@include breakpoint-up("lg") {
				max-width: 50%;
			}
		}

		&__icon-wrapper {
			position: absolute;
			inset: pxToRem(48) 0 auto auto;
			overflow: hidden;
			width: pxToRem(216);
			aspect-ratio: 1;

			@include breakpoint-up("lg") {
				width: pxToRem(360);
				inset: auto 0 pxToRem(-60) auto;
			}

			@include breakpoint-up("xl") {
				width: pxToRem(480);
				inset: auto 0 pxToRem(-120) auto;
			}
		}

		&__icon {
			width: 100%;
			height: auto;
			translate: pxToRem(48);

			@include breakpoint-up("lg") {
				translate: pxToRem(80);
			}

			@include breakpoint-up("xxl") {
				translate: 0;
			}

			&.color--green-100 {
				color: var(--color-green-100);
			}

			&.color--cardboard {
				color: var(--color-cardboard);
			}

			&.color--red {
				color: var(--color-red);
			}

			&.color--orange {
				color: var(--color-orange);
			}
		}
	}
</style>
