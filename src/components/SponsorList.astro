---
import Markdown from "./Markdown.astro";
import { graphql } from "gql.tada";
import { client } from "../utils/graphql-client";
import {
  SPONSOR_LIST_CATEGORY_SORTING_KEYS,
  SPONSOR_LIST_FILTER_TAG_KEY,
} from "../utils/constants";
import Link from "./Link.astro";

Astro.response.headers.set(
  "Cache-Control",
  "s-maxage=60, stale-while-revalidate",
);

// TODO: find why to filter sponsors by tagCollection title
// like tagCollection(where: {title: "FRONT24"})
const query = graphql(`
  query GetSponsorPage {
    collection: sponsorCollection {
      items {
        title
        link
        logo {
          url
        }
        logoSvg
        body
        twitter
        linkedin
        facebook
        instagram
        order
        category {
          title
        }
        tagCollection(limit: 1, order: [title_DESC]) {
          items {
            title
          }
        }
      }
    }
  }
`);

const data = await client.request(query, {});
const sponsors = data.collection.items;

// filter sponsors by current event year
const filteredSponsors = sponsors.filter((sponsor) => {
  return sponsor.tagCollection.items.some(
    (tag) => tag.title === SPONSOR_LIST_FILTER_TAG_KEY,
  );
});

// group sponsors by category
const groupedSponsors = filteredSponsors.reduce((acc, sponsor) => {
  const category = sponsor.category.title;

  if (!acc[category]) {
    acc[category] = [];
  }

  acc[category].push(sponsor);

  return acc;
}, {});

// sort sponsors by custom category order
const sortedSponsors = Object.keys(groupedSponsors)
  .sort((a, b) => {
    return (
      SPONSOR_LIST_CATEGORY_SORTING_KEYS.indexOf(a) -
      SPONSOR_LIST_CATEGORY_SORTING_KEYS.indexOf(b)
    );
  })
  .map((category) => {
    return {
      category,
      sponsors: groupedSponsors[category],
    };
  });

const socialsKeys = [
  { key: "twitter", link: "https://twitter.com/", label: "Twitter Profile" },
  { key: "linkedin", link: "https://linkedin.com/", label: "Linkedin Profile" },
  { key: "link", link: "", label: "Website" },
  { key: "facebook", link: "https://facebook.com/", label: "Facebook Profile" },
  {
    key: "instagram",
    link: "https://instagram.com/",
    label: "Instagram Profile",
  },
];

const getSocials = (sponsor) => {
  const array = [];

  socialsKeys.map((social) => {
    if (!!sponsor[social.key]) {
      array.push({
        key: social.key,
        href: `${social.link}${sponsor[social.key]}`,
        icon: social.key,
        title: `${sponsor.title} ${social.label}`,
      });
    }
  });

  return array;
};

const getSocial = (sponsor, key) =>
  getSocials(sponsor).find((item) => item.key === key);
---

{
  sortedSponsors.map((item) => (
    <div>
      <h3 class="list__title">{item.category}</h3>
      <ul class="list">
        {item.sponsors.map((sponsor) => (
          <li class="list__item grid">
            <a {...getSocial(sponsor, "link")} class="logo" target="_blank">
              <span class="logo__wrapper" set:html={sponsor.logoSvg} />
            </a>
            <div class="content">
              <h4 class="title">{sponsor.title}</h4>
              <Markdown text={sponsor.body} />
              <ul class="socials">
                {getSocials(sponsor).map((item) => (
                  <Link {...item} target="_blank" interactive />
                ))}
              </ul>
            </div>
          </li>
        ))}
      </ul>
    </div>
  ))
}

<style lang="scss">
  @import "../styles/_imports.scss";

  .list__title {
    @extend %typo-h6;

    display: flex;
    align-items: center;
    gap: var(--spacing-2x);
    margin-block: 0;

    &:after {
      content: "";
      display: block;
      height: 1px;
      background-color: var(--color-gray-100);
      flex: 1;
    }
  }

  .list {
    list-style: none;
    padding-inline-start: 0;
  }

  .list__item {
    align-items: start;
    padding-block: var(--spacing-10x);
  }

  .logo {
    @include breakpoint-up("sm") {
      grid-column: 1 / 5;
    }
  }

  .logo__wrapper {
    display: block;
    max-width: 80%;

    @include breakpoint-up("sm") {
      max-width: 100%;
    }

    :global(svg) {
      width: 100%;
      height: 100%;
    }
  }

  .content {
    @include breakpoint-up("sm") {
      grid-column: 6 / -1;
    }
  }

  .title {
    @extend %typo-h5;

    margin-block-start: 0;
    margin-block-end: var(--spacing-3x);
  }

  .socials {
    list-style: none;
    padding-inline-start: 0;
    margin-block-start: var(--spacing-6x);

    display: flex;
    gap: var(--spacing-5x);
  }
</style>
