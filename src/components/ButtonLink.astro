---
export interface Props {
  variant?: "primary" | "secondary" | "tertiary" | "quaternary";
  href: string;
}

const { variant = "primary", href } = Astro.props;
---

<a href={href} class:list={["button", variant]}>
  <span class="inner"><slot /></span>
</a>

<style lang="scss">
  @import "../styles/_imports.scss";

  .button {
    --button-color: var(--color-white);
    --button-background-color: var(--color-black);

    --button-hover-color: var(--color-green-100);
    --button-hover-background-color: var(--color-gray-800);

    --button-active-color: var(--color-green-100);
    --button-active-background-color: var(--color-black);

    --button-focus-color: var(--color-green-100);
    --button-focus-background-color: var(--color-black);
    --button-focus-outline-color: var(--color-green-100);

    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none !important;
    text-align: center;
    position: relative;
    height: pxToRem(40);
    clip-path: polygon(
      12px 0%,
      calc(100% - 12px) 0%,
      100% 50%,
      calc(100% - 12px) 100%,
      12px 100%,
      0% 50%
    );
    border: 0 none;
    appearance: none;
    padding: 0 pxToRem(30);
    color: var(--button-color);
    background-color: var(--button-background-color);
    outline: none !important;

    transition:
      color 150ms ease,
      background-color 150ms ease; // TODO: use timings variable

    font-variant-numeric: lining-nums tabular-nums; // TODO: type mixins or whatever
    // font-family: "Brutal Type";
    font-size: 16px; // TODO: type mixins or whatever
    font-style: normal; // TODO: type mixins or whatever
    font-weight: 400; // TODO: type mixins or whatever
    line-height: 1.25; // TODO: type mixins or whatever
    letter-spacing: 0.16px; // TODO: type mixins or whatever

    &::before {
      content: "";
      display: block;
      position: absolute;
      top: 2px; // TODO: use rem
      left: 3px; // TODO: use rem
      right: 3px; // TODO: use rem
      bottom: 2px; // TODO: use rem
      background-color: var(--button-background-color);
      transition: background-color 150ms ease; // TODO: use timings variable
      // TODO: use rem
      clip-path: polygon(
        11px 0%,
        calc(100% - 11px) 0%,
        100% 50%,
        calc(100% - 11px) 100%,
        11px 100%,
        0% 50%
      );
      z-index: 1;
      // opacity: 0;
    }

    &:hover {
      color: var(--button-hover-color);
      background-color: var(--button-hover-background-color);
      &::before {
        background-color: var(--button-hover-background-color);
      }
    }

    &:focus {
      color: var(--button-focus-color);
      background-color: var(--button-focus-outline-color);
      &::before {
        background-color: var(--button-focus-background-color);
      }
    }

    &:active {
      color: var(--button-active-color);
      background-color: var(--button-active-background-color);
      &::before {
        background-color: var(--button-active-background-color);
      }
    }

    &.secondary {
      --button-color: var(--color-gray-800);
      --button-background-color: var(--color-gray-050);

      --button-hover-color: var(--color-green-300);
      --button-hover-background-color: var(--color-gray-100);

      --button-active-color: var(--color-green-300);
      --button-active-background-color: var(--color-gray-100);

      --button-focus-color: var(--color-gray-900);
      --button-focus-background-color: var(--color-gray-050);
      --button-focus-outline-color: var(--color-green-100);
    }

    &.tertiary {
      --button-color: var(--color-gray-900);
      --button-background-color: var(--color-green-100);

      --button-hover-color: var(--color-white);
      --button-hover-background-color: var(--color-green-200);

      --button-active-color: var(--color-white);
      --button-active-background-color: var(--color-green-300);

      --button-focus-color: var(--color-gray-900);
      --button-focus-background-color: var(--color-green-100);
      --button-focus-outline-color: var(--color-gray-900);
    }

    &.quaternary {
      --button-color: var(--color-gray-800);
      --button-background-color: var(--color-white);

      --button-hover-color: var(--color-green-300);
      --button-hover-background-color: var(--color-gray-050);

      --button-active-color: var(--color-white);
      --button-active-background-color: var(--color-black);

      --button-focus-color: var(--color-gray-900);
      --button-focus-background-color: var(--color-white);
      --button-focus-outline-color: var(--color-green-100);
    }
  }

  .inner {
    position: relative;
    top: pxToRem(-1);
    z-index: 2;
  }
</style>
